double funct1(arg1_t p, arg2_t q, arg3_t r, arg4_t s) {
    return p/(q+r) - s;
}

# double funct1(arg1_t p, arg2_t q, arg3_t r, arg4_t s)
# p in %edi, q in %rsi or %xmm0, r in %rsid or %xmm0, s in %xmm1
funct1:
    vcvtsi2ssq  %rsi, %xmm2, %xmm2  # xmm2 <- (float) rsi
    vaddss      %xmm0, %xmm2, %xmm0 # xmm0 <- xmm2 + xmm0
    vcvtsi2ss   %edi, %xmm2, %xmm2  # xmm2 <- (float) edi
    vdivss      %xmm0, %xmm2, %xmm0 # xmm0 <- xmm2 / xmm0
    vunpcklps   %xmm0, %xmm0, %xmm0 #
    vcvtps2pd   %xmm0, %xmm0        # xmm0 <- (double) xmm0
    vsubsd      %xmm1, %xmm0, %xmm0 # xmm0 <- xmm0 - xmm1
    ret

The only ambiguity is due to the commutativity of addition; that is, we do
not know which of q and r has integer type. Therefore, the possible function
prototypes are:
double funct1(int p, long q, float r, double s);
double funct1(int p, float q, long r, double s);
