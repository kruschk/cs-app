3,510,593 = 0x00359141 (integer (two's complement or unsigned))
          = 0x4A564504 (float)

0x00359141 = 0b0000 0000 0011 0101 1001 0001 0100 0001
           = 1.1 0101 1001 0001 0100 0001 * 2^21
               ^------------------------^     ^^
                           f                  E

Padding to extend the fractional part to 23 bits, we have:
f = [101 0110 0100 0101 0000 0100]

For the exponent field, we must first determine the bias: 
bias = 2^(k - 1) - 1
     = 2^(8 - 1) - 1
     = 2^7 - 1
     = 128 - 1
     = 127

The exponent field must therefore have an unsigned value of:
E = e - bias -> e = E + bias
e = E + bias
  = 21 + 127
  = 148

Which, in binary, is:
148 = 2*74 + 0
 74 = 2*37 + 0
 37 = 2*18 + 1
 18 = 2*9  + 0
  9 = 2*4  + 1
  4 = 2*2  + 0
  2 = 2*1  + 0
  1 = 2*1  + 1
e = 148 = 0b1001 0100

The single-precision floating point representation is therefore (with leading
sign bit):
3,510,593 = [0 10010100 10101100100010100000100]
          = 0x4A564504

Consider:
0x00359141 = [0000 0000 0011 0101 1001 0001 0100 0001]
and
0x4A564504 = [0100 1010 0101 0110 0100 0101 0000 0100]

Shifting the floating-point representation two places to the right shows the
correspondence between the integer representation and the fractional part of
the floating point representation. The highest-order 21 bits of the fractional
part precisely match the lowest-order 21 bits of the integer representation.
[00000000001101011001000101000001]
            |||||||||||||||||||||
  [01001010010101100100010100000100]
